version: "3.8"

services:
  app:
    image: mlopsdemo/housing-api:latest
    container_name: housing-api
    restart: always
    depends_on:
      - mlflow
    ports:
      - "8000:8000"
    environment:
      - LOG_PATH=/app/logs/api.log
      - DB_PATH=/app/logs/api_requests.db
      # Point API (if it retrains) to the tracking server:
      - MLFLOW_TRACKING_URI=http://mlflow:5000
      - FEATURE_ORDER_PATH=/app/models/feature_order.json
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
      - ./models:/app/models
      # not required for serving, but handy for parity:
      - ./mlflow_store:/mlflow_store

  prometheus:
    image: prom/prometheus:v2.54.1
    container_name: prometheus
    restart: always
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yaml:/etc/prometheus/prometheus.yml:ro
      - ./prometheus.rules.yml:/etc/prometheus/prometheus.rules.yml


  grafana:
    image: grafana/grafana:11.1.4
    container_name: grafana
    restart: always
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - grafana-data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning

  mlflow:
    image: ghcr.io/mlflow/mlflow:v2.12.2
    container_name: mlflow
    restart: always
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow_store:/mlflow_store
    command: >
      mlflow server
      --host 0.0.0.0
      --port 5000
      --backend-store-uri sqlite:////mlflow_store/mlflow.db
      --default-artifact-root /mlflow_store/artifacts
      --serve-artifacts

volumes:
  grafana-data:
