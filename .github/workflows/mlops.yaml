name: MLOps Automation 

on:
  push:
    branches: [mlops, arv/update]
  workflow_dispatch:

jobs:
  build-train-push-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.10"

      - name: Install base tools
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install "dvc[s3]" flake8

      - name: Lint
        run: flake8 src/

      # --- DVC: pull from S3 and materialize files per dvc.lock ---
      - name: Configure AWS creds
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: DVC pull & checkout data
        run: |
          rm -f data/california_housing.csv || true
          dvc pull -v
          dvc checkout -v
          ls -lh data/

      # --- Build image FIRST (used for training + serving) ---
      - name: Build image
        run: |
          docker build -t mlopsdemo/housing-api:${{ github.sha }} -t mlopsdemo/housing-api:latest .

      # --- Train with the just-built image (local MLflow file store) ---
      - name: Train and log models
        run: |
          mkdir -p mlruns models data
          docker run --rm \
            -v ${{ github.workspace }}/data:/app/data \
            -v ${{ github.workspace }}/models:/app/models \
            -v ${{ github.workspace }}/mlruns:/mlflow/mlruns \
            -e MLFLOW_TRACKING_URI=file:/mlflow/mlruns \
            mlopsdemo/housing-api:${{ github.sha }} \
            python src/train.py

      - name: Upload mlruns artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: mlruns
          path: mlruns

      # --- Push images to Docker Hub ---
      - name: Docker Hub login
        run: echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin

      - name: Push images
        run: |
          docker push mlopsdemo/housing-api:${{ github.sha }}
          docker push mlopsdemo/housing-api:latest

      # --- Deploy to EC2 ---
      - name: Prepare .env
        run: echo "GRAFANA_ADMIN_PASSWORD=${{ secrets.GRAFANA_ADMIN_PASSWORD }}" > .env

      - name: Save SSH key
        run: |
          echo "${{ secrets.EC2_SSH_KEY }}" > ec2_deploy_key
          chmod 600 ec2_deploy_key

      - name: Rsync code to EC2
        run: |
          rsync -az -e "ssh -o StrictHostKeyChecking=no -i ec2_deploy_key" . ${{ secrets.EC2_SSH_USER }}@${{ secrets.EC2_PUBLIC_IP }}:/home/${{ secrets.EC2_SSH_USER }}/mlops-app/

      - name: Compose up on EC2
        env:
          EC2_PUBLIC_IP: ${{ secrets.EC2_PUBLIC_IP }}
          EC2_SSH_USER: ${{ secrets.EC2_SSH_USER }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ec2_deploy_key $EC2_SSH_USER@$EC2_PUBLIC_IP << 'EOF'
            set -e
            cd ~/mlops-app
            docker pull mlopsdemo/housing-api:latest
            docker compose down || true
            docker compose up -d --remove-orphans
            docker ps
          EOF

      - name: Cleanup key
        run: rm -f ec2_deploy_key
